Siesta Version  : v4.1-b4-351
Architecture    : x86_64-linux-n-62-26-19
Compiler version: GNU Fortran (GCC) 9.3.0
Compiler flags  : mpifort -m64 -fPIC -O3 -march=native -ftree-vectorize -fexpensive-optimizatioons -funroll-loops -fprefetch-loop-arrays -fno-second-underscore  -flto
PP flags        : -I/dtu/sw/dcc/SL73/2020-aug/generic/build-tools/1.0/include -I/dtu/sw/dcc/SL773/2020-aug/generic/gcc/9.3.0/include -I/dtu/sw/dcc/SL73/2020-aug/generic/gcc/9.3.0/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/zlib/1.2.11/include -I/dtu/sw/dcc/SL73/2020-aug/generic/numactl/2.0.12/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/libxml2/2.9.10/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/hwloc/2.2.0/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/knem/1.1.4/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/ucx/1.8.1/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/openmpi/4.0.4/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/szip/2.1.1/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/hdf5/1.12.0/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/pnetcdf/1.12.1/include -I/dtu/sw/dcc/SL73/2020-aug/generic/gen-zlib/1.2.11/include -I/dtu/sw/dcc/SL73/2020-aug/generic/openssl/1.1.1/include -I/dtu/sw/dcc/SL73/2020-aug/generic/libssh2/1.8.2/include -I/dtu/sw/dcc/SL73/2020-aug/generic/curl/7.65.1/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/netcdf/4.7.4/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/flook/0.8.1/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/fftw/3.3.8/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/parmetis/4.0.3/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/scalapack/2.1.0/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/lapack/3.9.0/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/blis/0.7.0/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/scotch/6.0.9/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/mumps/5.3.3/include -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/elpa/2020.05.001/include -DSIESTA__ELPA -DMPI -DFC_HAVE_FLUSH -DFC_HAVE_ABORT -DCDF -DCDF4 -DSIESTA__FLOOK  -DNCDF -DNCDF_4 -DNCDF_PARALLEL -DTS_NOCHECKS -DSIESTA__METIS -DSIESTA__MUMPS -DSIESTA__MRRR -I/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/elpa/2020.05.001/include/elpa
Libraries       : libncdf.a libfdict.a -lnetcdff -lnetcdf -lpnetcdf -lhdf5_hl -lhdf5 -lz  -lzmuumps -lmumps_common -lesmumps -lscotch -lscotcherr -lpord -lparmetis -lmetis -lelpa -lscalapack -llapack -lblis  -L/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/flook/0.8.1/lib -Wl,-rpath=/dtu/sw/dcc/SL73/2020-aug/XeonE5-2660v3/gnu/9.3.0/flook/0.8.1/lib -lflookall -ldl  -flto -fuse-linker-plugin  -lmetis
PARALLEL version
NetCDF support
NetCDF-4 support
NetCDF-4 MPI-IO support
METIS ordering support
Lua support

* Running on 8 nodes in parallel
>> Start of run:  22-JAN-2021  21:44:53

                           ***********************       
                           *  WELCOME TO SIESTA  *       
                           ***********************       

reinit: Reading from ../lua_h2o.fdf

reinit: -----------------------------------------------------------------------
reinit: System Name: Water molecule
reinit: -----------------------------------------------------------------------
reinit: System Label: lua_h2o
reinit: -----------------------------------------------------------------------

initatom: Reading input for the pseudopotentials and atomic orbitals ----------
Species number:   1 Atomic number:    8 Label: O
Species number:   2 Atomic number:    1 Label: H

Ground state valence configuration:   2s02  2p04
Reading pseudopotential information in formatted form from O.psf

Valence configuration for pseudopotential generation:
2s( 2.00) rc: 1.14
2p( 4.00) rc: 1.14
3d( 0.00) rc: 1.14
4f( 0.00) rc: 1.14
Ground state valence configuration:   1s01
Reading pseudopotential information in formatted form from H.psf

Valence configuration for pseudopotential generation:
1s( 1.00) rc: 1.25
2p( 0.00) rc: 1.25
3d( 0.00) rc: 1.25
4f( 0.00) rc: 1.25
For O, standard SIESTA heuristics set lmxkb to 3
 (one more than the basis l, including polarization orbitals).
Use PS.lmax or PS.KBprojectors blocks to override.
For H, standard SIESTA heuristics set lmxkb to 2
 (one more than the basis l, including polarization orbitals).
Use PS.lmax or PS.KBprojectors blocks to override.

<basis_specs>
===============================================================================
O                    Z=   8    Mass=  16.000        Charge= 0.17977+309
Lmxo=1 Lmxkb= 3    BasisType=split      Semic=F
L=0  Nsemic=0  Cnfigmx=2
          i=1  nzeta=2  polorb=0  (2s)
            splnorm:   0.15000    
               vcte:    0.0000    
               rinn:    0.0000    
               qcoe:    0.0000    
               qyuk:    0.0000    
               qwid:   0.10000E-01
                rcs:    0.0000      0.0000    
            lambdas:    1.0000      1.0000    
L=1  Nsemic=0  Cnfigmx=2
          i=1  nzeta=2  polorb=1  (2p)
            splnorm:   0.15000    
               vcte:    0.0000    
               rinn:    0.0000    
               qcoe:    0.0000    
               qyuk:    0.0000    
               qwid:   0.10000E-01
                rcs:    0.0000      0.0000    
            lambdas:    1.0000      1.0000    
-------------------------------------------------------------------------------
L=0  Nkbl=1  erefs: 0.17977+309
L=1  Nkbl=1  erefs: 0.17977+309
L=2  Nkbl=1  erefs: 0.17977+309
L=3  Nkbl=1  erefs: 0.17977+309
===============================================================================
</basis_specs>

atom: Called for O                     (Z =   8)

read_vps: Pseudopotential generation method:
read_vps: ATM3      Troullier-Martins                       
Valence charge for ps generation:    6.00000

xc_check: Exchange-correlation functional:
xc_check: Ceperley-Alder
V l=0 = -2*Zval/r beyond r=  1.1278
V l=1 = -2*Zval/r beyond r=  1.1278
V l=2 = -2*Zval/r beyond r=  1.1278
V l=3 = -2*Zval/r beyond r=  1.1138
All V_l potentials equal beyond r=  1.1278
This should be close to max(r_c) in ps generation
All pots = -2*Zval/r beyond r=  1.1278

VLOCAL1: 99.0% of the norm of Vloc inside     34.126 Ry
VLOCAL1: 99.9% of the norm of Vloc inside     77.774 Ry
atom: Maximum radius for 4*pi*r*r*local-pseudopot. charge    1.37759
atom: Maximum radius for r*vlocal+2*Zval:    1.18566
GHOST: No ghost state for L =  0
GHOST: No ghost state for L =  1
GHOST: No ghost state for L =  2
GHOST: No ghost state for L =  3

KBgen: Kleinman-Bylander projectors: 
   l= 0   rc=  1.294105   el= -1.742414   Ekb=  9.135903   kbcos=  0.326910
   l= 1   rc=  1.294105   el= -0.676589   Ekb= -8.124878   kbcos= -0.395047
   l= 2   rc=  1.448233   el=  0.002386   Ekb= -2.039267   kbcos= -0.003484
   l= 3   rc=  1.561052   el=  0.003508   Ekb= -0.799141   kbcos= -0.000344

KBgen: Total number of  Kleinman-Bylander projectors:   16
atom: -------------------------------------------------------------------------

atom: SANKEY-TYPE ORBITALS:
atom: Selected multiple-zeta basis: split     

SPLIT: Orbitals with angular momentum L= 0

SPLIT: Basis orbitals for state 2s

SPLIT: PAO cut-off radius determined from an
SPLIT: energy shift=  0.020000 Ry

   izeta = 1
                 lambda =    1.000000
                     rc =    3.305093
                 energy =   -1.723766
                kinetic =    1.614911
    potential(screened) =   -3.338677
       potential(ionic) =  -11.304675

   izeta = 2
                 rmatch =    2.510382
              splitnorm =    0.150000
                 energy =   -1.471299
                kinetic =    2.446434
    potential(screened) =   -3.917732
       potential(ionic) =  -12.476133

SPLIT: Orbitals with angular momentum L= 1

SPLIT: Basis orbitals for state 2p

SPLIT: PAO cut-off radius determined from an
SPLIT: energy shift=  0.020000 Ry

   izeta = 1
                 lambda =    1.000000
                     rc =    3.937239
                 energy =   -0.658841
                kinetic =    5.005986
    potential(screened) =   -5.664827
       potential(ionic) =  -13.452360

   izeta = 2
                 rmatch =    2.541963
              splitnorm =    0.150000
                 energy =   -0.367441
                kinetic =    7.530509
    potential(screened) =   -7.897949
       potential(ionic) =  -16.611953

POLgen: Perturbative polarization orbital with L=  2

POLgen: Polarization orbital for state 2p

   izeta = 1
                     rc =    3.937239
                 energy =    2.398520
                kinetic =    4.716729
    potential(screened) =   -2.318209
       potential(ionic) =   -8.603170
atom: Total number of Sankey-type orbitals: 13

atm_pop: Valence configuration (for local Pseudopot. screening):
 2s( 2.00)                                                            
 2p( 4.00)                                                            
Vna: chval, zval:    6.00000   6.00000

Vna:  Cut-off radius for the neutral-atom potential:   3.937239

atom: _________________________________________________________________________

<basis_specs>
===============================================================================
H                    Z=   1    Mass=  1.0100        Charge= 0.17977+309
Lmxo=0 Lmxkb= 2    BasisType=split      Semic=F
L=0  Nsemic=0  Cnfigmx=1
          i=1  nzeta=2  polorb=1  (1s)
            splnorm:   0.15000    
               vcte:    0.0000    
               rinn:    0.0000    
               qcoe:    0.0000    
               qyuk:    0.0000    
               qwid:   0.10000E-01
                rcs:    0.0000      0.0000    
            lambdas:    1.0000      1.0000    
-------------------------------------------------------------------------------
L=0  Nkbl=1  erefs: 0.17977+309
L=1  Nkbl=1  erefs: 0.17977+309
L=2  Nkbl=1  erefs: 0.17977+309
===============================================================================
</basis_specs>

atom: Called for H                     (Z =   1)

read_vps: Pseudopotential generation method:
read_vps: ATM3      Troullier-Martins                       
Valence charge for ps generation:    1.00000

xc_check: Exchange-correlation functional:
xc_check: Ceperley-Alder
V l=0 = -2*Zval/r beyond r=  1.2343
V l=1 = -2*Zval/r beyond r=  1.2189
V l=2 = -2*Zval/r beyond r=  1.2189
All V_l potentials equal beyond r=  1.2343
This should be close to max(r_c) in ps generation
All pots = -2*Zval/r beyond r=  1.2343

VLOCAL1: 99.0% of the norm of Vloc inside     28.493 Ry
VLOCAL1: 99.9% of the norm of Vloc inside     64.935 Ry
atom: Maximum radius for 4*pi*r*r*local-pseudopot. charge    1.45251
atom: Maximum radius for r*vlocal+2*Zval:    1.21892
GHOST: No ghost state for L =  0
GHOST: No ghost state for L =  1
GHOST: No ghost state for L =  2

KBgen: Kleinman-Bylander projectors: 
   l= 0   rc=  1.364359   el= -0.467325   Ekb= -2.005361   kbcos= -0.336422
   l= 1   rc=  1.434438   el=  0.001430   Ekb= -0.501708   kbcos= -0.021697
   l= 2   rc=  1.470814   el=  0.002365   Ekb= -0.190555   kbcos= -0.002281

KBgen: Total number of  Kleinman-Bylander projectors:    9
atom: -------------------------------------------------------------------------

atom: SANKEY-TYPE ORBITALS:
atom: Selected multiple-zeta basis: split     

SPLIT: Orbitals with angular momentum L= 0

SPLIT: Basis orbitals for state 1s

SPLIT: PAO cut-off radius determined from an
SPLIT: energy shift=  0.020000 Ry

   izeta = 1
                 lambda =    1.000000
                     rc =    4.828263
                 energy =   -0.449375
                kinetic =    0.929372
    potential(screened) =   -1.378747
       potential(ionic) =   -1.915047

   izeta = 2
                 rmatch =    3.854947
              splitnorm =    0.150000
                 energy =   -0.336153
                kinetic =    1.505294
    potential(screened) =   -1.841447
       potential(ionic) =   -2.413582

POLgen: Perturbative polarization orbital with L=  1

POLgen: Polarization orbital for state 1s

   izeta = 1
                     rc =    4.828263
                 energy =    0.706972
                kinetic =    1.396397
    potential(screened) =   -0.689424
       potential(ionic) =   -1.169792
atom: Total number of Sankey-type orbitals:  5

atm_pop: Valence configuration (for local Pseudopot. screening):
 1s( 1.00)                                                            
Vna: chval, zval:    1.00000   1.00000

Vna:  Cut-off radius for the neutral-atom potential:   4.828263

atom: _________________________________________________________________________

prinput: Basis input ----------------------------------------------------------

PAO.BasisType split     

%block ChemicalSpeciesLabel
    1    8 O                       # Species index, atomic number, species label
    2    1 H                       # Species index, atomic number, species label
%endblock ChemicalSpeciesLabel

%block PAO.Basis                 # Define Basis set
O                     2                    # Species label, number of l-shells
 n=2   0   2                         # n, l, Nzeta 
   3.305      2.510   
   1.000      1.000   
 n=2   1   2 P   1                   # n, l, Nzeta, Polarization, NzetaPol
   3.937      2.542   
   1.000      1.000   
H                     1                    # Species label, number of l-shells
 n=1   0   2 P   1                   # n, l, Nzeta, Polarization, NzetaPol
   4.828      3.855   
   1.000      1.000   
%endblock PAO.Basis

prinput: ----------------------------------------------------------------------

Dumping basis to NetCDF file O.ion.nc
Dumping basis to NetCDF file H.ion.nc
coor:   Atomic-coordinates input format  =     Cartesian coordinates
coor:                                          (in Angstroms)

siesta: Atomic coordinates (Bohr) and species
siesta:      0.00000   0.00000   0.00000  1        1
siesta:      1.43052   1.10738   0.00000  2        2
siesta:     -1.43052   1.10738   0.00000  2        3

siesta: Automatic unit cell vectors (Ang):
siesta:    7.286412    0.000000    0.000000
siesta:    0.000000    5.746952    0.000000
siesta:    0.000000    0.000000    5.621012

siesta: System type = molecule  

initatomlists: Number of atoms, orbitals, and projectors:      3    23    34

siesta: ******************** Simulation parameters ****************************
siesta:
siesta: The following are some of the parameters of the simulation.
siesta: A complete list of the parameters used, including default values,
siesta: can be found in file out.fdf
siesta:
redata: Spin configuration                          = none
redata: Number of spin components                   = 1
redata: Time-Reversal Symmetry                      = T
redata: Spin spiral                                 = F
redata: Long output                                 =   F
redata: Number of Atomic Species                    =        2
redata: Charge density info will appear in .RHO file
redata: Write Mulliken Pop.                         = NO
redata: Matel table size (NRTAB)                    =     1024
redata: Mesh Cutoff                                 =    50.0000 Ry
redata: Net charge of the system                    =     0.0000 |e|
redata: Min. number of SCF Iter                     =        0
redata: Max. number of SCF Iter                     =     1000
redata: SCF convergence failure will abort job
redata: SCF mix quantity                            = Hamiltonian
redata: Mix DM or H after convergence               =   F
redata: Recompute H after scf cycle                 =   F
redata: Mix DM in first SCF step                    =   T
redata: Write Pulay info on disk                    =   F
redata: New DM Occupancy tolerance                  = 0.000000000001
redata: No kicks to SCF
redata: DM Mixing Weight for Kicks                  =     0.5000
redata: Require Harris convergence for SCF          =   F
redata: Harris energy tolerance for SCF             =     0.000100 eV
redata: Require DM convergence for SCF              =   T
redata: DM tolerance for SCF                        =     0.000100
redata: Require EDM convergence for SCF             =   F
redata: EDM tolerance for SCF                       =     0.001000 eV
redata: Require H convergence for SCF               =   T
redata: Hamiltonian tolerance for SCF               =     0.001000 eV
redata: Require (free) Energy convergence for SCF   =   F
redata: (free) Energy tolerance for SCF             =     0.000100 eV
redata: Using Saved Data (generic)                  =   F
redata: Use continuation files for DM               =   F
redata: Neglect nonoverlap interactions             =   F
redata: Method of Calculation                       = Diagonalization
redata: Electronic Temperature                      =   299.9869 K
redata: Fix the spin of the system                  =   F
redata: Dynamics option                             = CG coord. optimization
redata: Variable cell                               =   F
redata: Use continuation files for CG               =   F
redata: Max atomic displ per move                   =     0.1058 Ang
redata: Maximum number of optimization moves        =      100
redata: Force tolerance                             =     0.0400 eV/Ang
mix.SCF: Pulay mixing                            = Pulay
mix.SCF:    Variant                              = stable
mix.SCF:    History steps                        = 2
mix.SCF:    Linear mixing weight                 =     0.250000
mix.SCF:    Mixing weight                        =     0.250000
mix.SCF:    SVD condition                        = 0.1000E-07
redata: Save all siesta data in one NC              =   F
redata: ***********************************************************************

%block SCF.Mixers
  Pulay
%endblock SCF.Mixers

%block SCF.Mixer.Pulay
  # Mixing method
  method pulay
  variant stable

  # Mixing options
  weight 0.2500
  weight.linear 0.2500
  history 2
%endblock SCF.Mixer.Pulay

DM_history_depth set to one: no extrapolation allowed by default for geometry relaxation
Size of DM history Fstack: 1
Total number of electrons:     8.000000
Total ionic charge:     8.000000

* ProcessorY, Blocksize:    2   3


* Orbital distribution balance (max,min):     3     2

 Kpoints in:            1 . Kpoints trimmed:            1

siesta: k-grid: Number of k-points =     1
siesta: k-grid: Cutoff (effective) =     2.811 Ang
siesta: k-grid: Supercell and displacements
siesta: k-grid:    1   0   0      0.000
siesta: k-grid:    0   1   0      0.000
siesta: k-grid:    0   0   1      0.000

diag: Algorithm                                     = D&C
diag: Parallel over k                               =   F
diag: Use parallel 2D distribution                  =   T
diag: Parallel block-size                           = 3
diag: Parallel distribution                         =     2 x     4
diag: Used triangular part                          = Lower
diag: Absolute tolerance                            =  0.100E-15
diag: Orthogonalization factor                      =  0.100E-05
diag: Memory factor                                 =  1.0000


ts: **************************************************************
ts: Save H and S matrices                           =    F
ts: Save DM and EDM matrices                        =    F
ts: Only save the overlap matrix S                  =    F
ts: **************************************************************

************************ Begin: TS CHECKS AND WARNINGS ************************
************************ End: TS CHECKS AND WARNINGS **************************


LUA successfully initialized: ../siesta.lua

siesta-lua: calling siesta_comm() @ 1
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...After initialization...
...After initialization...
...After initialization...
...After initialization...
...After initialization...
...After initialization...
...After initialization...
  lua: siesta_send, Node = 1

                     ====================================
                        Begin CG opt. move =      0
                     ====================================
...After initialization...

outcell: Unit cell vectors (Ang):
        7.286412    0.000000    0.000000
        0.000000    5.746952    0.000000
        0.000000    0.000000    5.621012

outcell: Cell vector modules (Ang)   :    7.286412    5.746952    5.621012
outcell: Cell angles (23,13,12) (deg):     90.0000     90.0000     90.0000
outcell: Cell volume (Ang**3)        :    235.3780
<dSpData1D:S at geom step 0
  <sparsity:sparsity for geom step 0
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 7>
  <dData1D:(new from dSpData1D) n=69, refcount: 1>
refcount: 1>
new_DM -- step:     1
Initializing Density Matrix...
DM filled with atomic data:
<dSpData2D:DM initialized from atoms
  <sparsity:sparsity for geom step 0
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 8>
  <dData2D:DM n=69 m=1, refcount: 1>
refcount: 1>
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23
New grid distribution:   1
           1       1:   16    1:    8    1:    3
           2       1:   16    1:    8    4:    6
           3       1:   16    1:    8    7:    9
           4       1:   16    1:    8   10:   12
           5       1:   16    9:   15    1:    3
           6       1:   16    9:   15    4:    6
           7       1:   16    9:   15    7:    9
           8       1:   16    9:   15   10:   12

InitMesh: MESH =    32 x    30 x    24 =       23040
InitMesh: (bp) =    16 x    15 x    12 =        2880
InitMesh: Mesh cutoff (required, used) =    50.000    50.384 Ry
ExtMesh (bp) on 0 =    40 x    36 x    27 =       38880
New grid distribution:   2
           1       5:   16    5:   15    1:    4
           2       5:   16    1:    4    1:    4
           3       5:   16    1:    4    5:   12
           4       1:    4    1:    4    5:   12
           5       1:    4    5:   15    1:    4
           6       1:    4    1:    4    1:    4
           7       5:   16    5:   15    5:   12
           8       1:    4    5:   15    5:   12
New grid distribution:   3
           1       1:    7    6:   15    1:    4
           2       8:   16    1:    5    1:    5
           3       1:    7    6:   15    5:   12
           4       8:   16    1:    5    6:   12
           5       8:   16    6:   15    1:    4
           6       1:    7    1:    5    6:   12
           7       8:   16    6:   15    5:   12
           8       1:    7    1:    5    1:    5
Setting up quadratic distribution...
ExtMesh (bp) on 0 =    36 x    39 x    28 =       39312
PhiOnMesh: Number of (b)points on node 0 =                  528
PhiOnMesh: nlist on node 0 =                 2325
siesta-lua: calling siesta_comm() @ 2
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
  lua: siesta_send, Node = 1

stepf: Fermi-Dirac step function

siesta: Program's energy decomposition (eV):
siesta: Ebs     =       -86.527792
siesta: Eions   =       815.854478
siesta: Ena     =       175.155695
siesta: Ekin    =       370.751214
siesta: Enl     =       -67.181693
siesta: Eso     =         0.000000
siesta: Edftu   =         0.000000
siesta: DEna    =       -13.606153
siesta: DUscf   =         1.705518
siesta: DUext   =         0.000000
siesta: Exc     =      -116.213035
siesta: eta*DQ  =         0.000000
siesta: Emadel  =         0.000000
siesta: Emeta   =         0.000000
siesta: Emolmec =         0.000000
siesta: Ekinion =         0.000000
siesta: Eharris =      -467.643428
siesta: Etot    =      -465.242933
siesta: FreeEng =      -465.242933

        iscf     Eharris(eV)        E_KS(eV)     FreeEng(eV)     dDmax    Ef(eV) dHmax(eV)
   scf:    1     -467.643428     -465.242933     -465.242933  1.438866 -4.255292  6.304075
timer: Routine,Calls,Time,% = IterSCF        1       0.015   1.12
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    2     -466.123353     -465.762348     -465.762348  0.046623 -3.205179  2.536058
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    3     -465.848173     -465.834936     -465.834936  0.025062 -2.451504  0.346694
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    4     -465.840170     -465.837729     -465.837729  0.011230 -2.372407  0.257361
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    5     -465.839621     -465.839024     -465.839024  0.022575 -2.158533  0.043583
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
...At start of SCF...
...At start of SCF...
   scf:    6     -465.839192     -465.839120     -465.839120  0.001062 -2.148821  0.024923
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
...At start of SCF...
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    7     -465.839158     -465.839140     -465.839140  0.000650 -2.149497  0.016649
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    8     -465.839156     -465.839149     -465.839149  0.000599 -2.152934  0.009990
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    9     -465.839151     -465.839150     -465.839150  0.000462 -2.157831  0.002374
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
...At start of SCF...
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:   10     -465.839150     -465.839150     -465.839150  0.000038 -2.159315  0.001606
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:   11     -465.839150     -465.839150     -465.839150  0.000014 -2.159996  0.000733

SCF Convergence by DM+H criterion
max |DM_out - DM_in|         :     0.0000143424
max |H_out - H_in|      (eV) :     0.0007332873
SCF cycle converged after 11 iterations
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight

Using DM_out to compute the final energy and forces
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23

siesta: E_KS(eV) =             -465.8392
...At atomic movement...

siesta: E_KS - E_eggbox =      -465.8392
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
siesta-lua: calling siesta_comm() @ 4
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At atomic movement...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d2  , var = geom.fa

siesta: Atomic forces (eV/Ang):
----------------------------------------
   Tot    0.000000    0.055861    0.000000
----------------------------------------
   Max    0.690626
   Res    0.379823    sqrt( Sum f_i^2 / 3N )
----------------------------------------
   Max    0.459864    constrained

Stress tensor Voigt[x,y,z,yz,xz,xy] (kbar):      -19.92       -3.51       22.43        0.00        0.00       -0.00
(Free)E + p*V (eV/cell)     -465.7901
Target enthalpy (eV/cell)     -465.8392

                     ====================================
                        Begin CG opt. move =      1
                     ====================================

outcell: Unit cell vectors (Ang):
        7.286412    0.000000    0.000000
        0.000000    5.746952    0.000000
        0.000000    0.000000    5.621012

outcell: Cell vector modules (Ang)   :    7.286412    5.746952    5.621012
outcell: Cell angles (23,13,12) (deg):     90.0000     90.0000     90.0000
outcell: Cell volume (Ang**3)        :    235.3780
<dSpData1D:S at geom step 1
  <sparsity:sparsity for geom step 1
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 7>
  <dData1D:(new from dSpData1D) n=69, refcount: 1>
refcount: 1>
new_DM -- step:     2
Re-using DM from previous geometries...
Number of DMs in history: 1
 DM extrapolation coefficients: 
1   1.00000
New DM after history re-use:
<dSpData2D:SpM extrapolated using coords
  <sparsity:sparsity for geom step 1
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 9>
  <dData2D:(temp array for extrapolation) n=69 m=1, refcount: 1>
refcount: 1>
Note: For starting DM, Qtot, Tr[D*S] =          8.00000000          7.86587089
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23
New grid distribution:   1
           1       1:   16    1:    8    1:    3
           2       1:   16    1:    8    4:    6
           3       1:   16    1:    8    7:    9
           4       1:   16    1:    8   10:   12
           5       1:   16    9:   15    1:    3
           6       1:   16    9:   15    4:    6
           7       1:   16    9:   15    7:    9
           8       1:   16    9:   15   10:   12

InitMesh: MESH =    32 x    30 x    24 =       23040
InitMesh: (bp) =    16 x    15 x    12 =        2880
InitMesh: Mesh cutoff (required, used) =    50.000    50.384 Ry
ExtMesh (bp) on 0 =    40 x    36 x    27 =       38880
New grid distribution:   2
           1       5:   16    1:    5    1:    4
           2       1:    4    6:   15    1:    4
           3       5:   16    1:    5    5:   12
           4       1:    4    6:   15    5:   12
           5       5:   16    6:   15    1:    4
           6       1:    4    1:    5    5:   12
           7       5:   16    6:   15    5:   12
           8       1:    4    1:    5    1:    4
New grid distribution:   3
           1       1:    7    6:   15    1:    5
           2       8:   16    1:    5    1:    5
           3       1:    7    6:   15    6:   12
           4       8:   16    1:    5    6:   12
           5       8:   16    6:   15    1:    4
           6       1:    7    1:    5    6:   12
           7       8:   16    6:   15    5:   12
           8       1:    7    1:    5    1:    5
Setting up quadratic distribution...
ExtMesh (bp) on 0 =    36 x    33 x    28 =       33264
PhiOnMesh: Number of (b)points on node 0 =                  240
PhiOnMesh: nlist on node 0 =                 2009
siesta-lua: calling siesta_comm() @ 2
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
  lua: siesta_send, Node = 1

        iscf     Eharris(eV)        E_KS(eV)     FreeEng(eV)     dDmax    Ef(eV) dHmax(eV)
   scf:    1     -466.089857     -465.519153     -465.519153  0.140362 -2.561416  1.853374
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    2     -464.860263     -465.358001     -465.358001  0.085406 -3.687712  3.207646
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    3     -465.657392     -465.579144     -465.579144  0.055264 -2.961583  0.057131
...At start of SCF...
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    4     -465.579447     -465.579302     -465.579302  0.001416 -2.967072  0.054037
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    5     -465.579514     -465.579414     -465.579414  0.002491 -2.982167  0.019179
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    6     -465.579426     -465.579421     -465.579421  0.000811 -2.988214  0.001483
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    7     -465.579421     -465.579421     -465.579421  0.000078 -2.987964  0.000759

SCF Convergence by DM+H criterion
max |DM_out - DM_in|         :     0.0000779577
max |H_out - H_in|      (eV) :     0.0007588059
SCF cycle converged after 7 iterations
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight

Using DM_out to compute the final energy and forces
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23

siesta: E_KS(eV) =             -465.5794
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
siesta-lua: calling siesta_comm() @ 4
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At atomic movement...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d2  , var = geom.fa

siesta: Atomic forces (eV/Ang):
----------------------------------------
   Tot   -0.000000   -0.517710    0.000000
----------------------------------------
   Max    2.985752
   Res    1.372399    sqrt( Sum f_i^2 / 3N )
----------------------------------------
   Max    2.985752    constrained

Stress tensor Voigt[x,y,z,yz,xz,xy] (kbar):       -1.72       18.60       24.19       -0.00        0.00        0.00
(Free)E + p*V (eV/cell)     -467.5905
Target enthalpy (eV/cell)     -465.5794

                     ====================================
                        Begin CG opt. move =      2
                     ====================================

outcell: Unit cell vectors (Ang):
        7.286412    0.000000    0.000000
        0.000000    5.746952    0.000000
        0.000000    0.000000    5.621012

outcell: Cell vector modules (Ang)   :    7.286412    5.746952    5.621012
outcell: Cell angles (23,13,12) (deg):     90.0000     90.0000     90.0000
outcell: Cell volume (Ang**3)        :    235.3780
<dSpData1D:S at geom step 2
  <sparsity:sparsity for geom step 2
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 7>
  <dData1D:(new from dSpData1D) n=69, refcount: 1>
refcount: 1>
new_DM -- step:     3
Re-using DM from previous geometries...
Number of DMs in history: 1
 DM extrapolation coefficients: 
1   1.00000
New DM after history re-use:
<dSpData2D:SpM extrapolated using coords
  <sparsity:sparsity for geom step 2
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 9>
  <dData2D:(temp array for extrapolation) n=69 m=1, refcount: 1>
refcount: 1>
Note: For starting DM, Qtot, Tr[D*S] =          8.00000000          8.10104813
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23
New grid distribution:   1
           1       1:   16    1:    8    1:    3
           2       1:   16    1:    8    4:    6
           3       1:   16    1:    8    7:    9
           4       1:   16    1:    8   10:   12
           5       1:   16    9:   15    1:    3
           6       1:   16    9:   15    4:    6
           7       1:   16    9:   15    7:    9
           8       1:   16    9:   15   10:   12

InitMesh: MESH =    32 x    30 x    24 =       23040
InitMesh: (bp) =    16 x    15 x    12 =        2880
InitMesh: Mesh cutoff (required, used) =    50.000    50.384 Ry
ExtMesh (bp) on 0 =    40 x    36 x    27 =       38880
New grid distribution:   2
           1       5:   16    5:   15    1:    4
           2       5:   16    1:    4    1:    4
           3       5:   16    1:    4    5:   12
           4       1:    4    1:    4    5:   12
           5       1:    4    5:   15    1:    4
           6       1:    4    1:    4    1:    4
           7       5:   16    5:   15    5:   12
           8       1:    4    5:   15    5:   12
New grid distribution:   3
           1       1:    7    6:   15    1:    5
           2       8:   16    1:    5    1:    5
           3       1:    7    6:   15    6:   12
           4       8:   16    1:    5    6:   12
           5       8:   16    6:   15    1:    4
           6       1:    7    1:    5    6:   12
           7       8:   16    6:   15    5:   12
           8       1:    7    1:    5    1:    5
Setting up quadratic distribution...
ExtMesh (bp) on 0 =    36 x    39 x    28 =       39312
PhiOnMesh: Number of (b)points on node 0 =                  528
PhiOnMesh: nlist on node 0 =                 2325
siesta-lua: calling siesta_comm() @ 2
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
  lua: siesta_send, Node = 1

        iscf     Eharris(eV)        E_KS(eV)     FreeEng(eV)     dDmax    Ef(eV) dHmax(eV)
   scf:    1     -465.254383     -465.792261     -465.792261  0.118466 -2.636971  1.599376
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
...At start of SCF...
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
...At start of SCF...
   scf:    2     -465.382117     -465.696039     -465.696039  0.058818 -1.659061  2.590584
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    3     -465.886205     -465.836105     -465.836105  0.037037 -2.269163  0.066363
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    4     -465.836235     -465.836171     -465.836171  0.000943 -2.258732  0.037761
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    5     -465.836283     -465.836229     -465.836229  0.001373 -2.244976  0.006867
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
...At start of SCF...
   scf:    6     -465.836236     -465.836233     -465.836233  0.000283 -2.241945  0.001095
...At start of SCF...
...At start of SCF...
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    7     -465.836233     -465.836233     -465.836233  0.000022 -2.241642  0.000387

SCF Convergence by DM+H criterion
max |DM_out - DM_in|         :     0.0000218642
max |H_out - H_in|      (eV) :     0.0003871777
SCF cycle converged after 7 iterations
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight

Using DM_out to compute the final energy and forces
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23

siesta: E_KS(eV) =             -465.8362
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
siesta-lua: calling siesta_comm() @ 4
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At atomic movement...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d2  , var = geom.fa

siesta: Atomic forces (eV/Ang):
----------------------------------------
   Tot   -0.000000    0.775115    0.000000
----------------------------------------
   Max    0.857773
   Res    0.345708    sqrt( Sum f_i^2 / 3N )
----------------------------------------
   Max    0.857773    constrained

Stress tensor Voigt[x,y,z,yz,xz,xy] (kbar):      -16.97       -0.78       22.61       -0.00        0.00       -0.00
(Free)E + p*V (eV/cell)     -466.0742
Target enthalpy (eV/cell)     -465.8362

cgvc: Finished line minimization    1.  Mean atomic displacement =    0.0154

                     ====================================
                        Begin CG opt. move =      3
                     ====================================

outcell: Unit cell vectors (Ang):
        7.286412    0.000000    0.000000
        0.000000    5.746952    0.000000
        0.000000    0.000000    5.621012

outcell: Cell vector modules (Ang)   :    7.286412    5.746952    5.621012
outcell: Cell angles (23,13,12) (deg):     90.0000     90.0000     90.0000
outcell: Cell volume (Ang**3)        :    235.3780
<dSpData1D:S at geom step 3
  <sparsity:sparsity for geom step 3
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 7>
  <dData1D:(new from dSpData1D) n=69, refcount: 1>
refcount: 1>
new_DM -- step:     4
Re-using DM from previous geometries...
Number of DMs in history: 1
 DM extrapolation coefficients: 
1   1.00000
New DM after history re-use:
<dSpData2D:SpM extrapolated using coords
  <sparsity:sparsity for geom step 3
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 9>
  <dData2D:(temp array for extrapolation) n=69 m=1, refcount: 1>
refcount: 1>
Note: For starting DM, Qtot, Tr[D*S] =          8.00000000          7.98357231
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23
New grid distribution:   1
           1       1:   16    1:    8    1:    3
           2       1:   16    1:    8    4:    6
           3       1:   16    1:    8    7:    9
           4       1:   16    1:    8   10:   12
           5       1:   16    9:   15    1:    3
           6       1:   16    9:   15    4:    6
           7       1:   16    9:   15    7:    9
           8       1:   16    9:   15   10:   12

InitMesh: MESH =    32 x    30 x    24 =       23040
InitMesh: (bp) =    16 x    15 x    12 =        2880
InitMesh: Mesh cutoff (required, used) =    50.000    50.384 Ry
ExtMesh (bp) on 0 =    40 x    36 x    27 =       38880
New grid distribution:   2
           1       5:   16    5:   15    1:    4
           2       5:   16    1:    4    1:    4
           3       5:   16    1:    4    5:   12
           4       1:    4    1:    5    1:    4
           5       1:    4    1:    5    5:   12
           6       1:    4    6:   15    1:    4
           7       5:   16    5:   15    5:   12
           8       1:    4    6:   15    5:   12
New grid distribution:   3
           1       1:    7    6:   15    1:    4
           2       8:   16    1:    5    1:    5
           3       1:    7    6:   15    5:   12
           4       8:   16    1:    5    6:   12
           5       8:   16    6:   15    1:    4
           6       1:    7    1:    5    6:   12
           7       8:   16    6:   15    5:   12
           8       1:    7    1:    5    1:    5
Setting up quadratic distribution...
ExtMesh (bp) on 0 =    36 x    39 x    28 =       39312
PhiOnMesh: Number of (b)points on node 0 =                  528
PhiOnMesh: nlist on node 0 =                 2333
siesta-lua: calling siesta_comm() @ 2
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
  lua: siesta_send, Node = 1

        iscf     Eharris(eV)        E_KS(eV)     FreeEng(eV)     dDmax    Ef(eV) dHmax(eV)
   scf:    1     -465.895815     -465.814973     -465.814973  0.019338 -2.276761  0.235687
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    2     -465.806392     -465.812966     -465.812966  0.009588 -2.427785  0.378115
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
...At start of SCF...
...At start of SCF...
   scf:    3     -465.816973     -465.815897     -465.815897  0.005855 -2.334402  0.007812
...At start of SCF...
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    4     -465.815902     -465.815900     -465.815900  0.000163 -2.335975  0.005697
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    5     -465.815902     -465.815901     -465.815901  0.000304 -2.338954  0.000789
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    6     -465.815901     -465.815901     -465.815901  0.000008 -2.339003  0.000415

SCF Convergence by DM+H criterion
max |DM_out - DM_in|         :     0.0000084711
max |H_out - H_in|      (eV) :     0.0004150239
SCF cycle converged after 6 iterations
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight

Using DM_out to compute the final energy and forces
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23
...At atomic movement...

siesta: E_KS(eV) =             -465.8159
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
siesta-lua: calling siesta_comm() @ 4
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At atomic movement...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d2  , var = geom.fa

siesta: Atomic forces (eV/Ang):
----------------------------------------
   Tot    0.000000    1.313398    0.000000
----------------------------------------
   Max    1.969326
   Res    0.678114    sqrt( Sum f_i^2 / 3N )
----------------------------------------
   Max    1.969326    constrained

Stress tensor Voigt[x,y,z,yz,xz,xy] (kbar):      -14.17        2.24       22.86        0.00       -0.00       -0.00
(Free)E + p*V (eV/cell)     -466.3513
Target enthalpy (eV/cell)     -465.8159

                     ====================================
                        Begin CG opt. move =      4
                     ====================================

outcell: Unit cell vectors (Ang):
        7.286412    0.000000    0.000000
        0.000000    5.746952    0.000000
        0.000000    0.000000    5.621012

outcell: Cell vector modules (Ang)   :    7.286412    5.746952    5.621012
outcell: Cell angles (23,13,12) (deg):     90.0000     90.0000     90.0000
outcell: Cell volume (Ang**3)        :    235.3780
<dSpData1D:S at geom step 4
  <sparsity:sparsity for geom step 4
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 7>
  <dData1D:(new from dSpData1D) n=69, refcount: 1>
refcount: 1>
new_DM -- step:     5
Re-using DM from previous geometries...
Number of DMs in history: 1
 DM extrapolation coefficients: 
1   1.00000
New DM after history re-use:
<dSpData2D:SpM extrapolated using coords
  <sparsity:sparsity for geom step 4
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 9>
  <dData2D:(temp array for extrapolation) n=69 m=1, refcount: 1>
refcount: 1>
Note: For starting DM, Qtot, Tr[D*S] =          8.00000000          8.02806752
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23
New grid distribution:   1
           1       1:   16    1:    8    1:    3
           2       1:   16    1:    8    4:    6
           3       1:   16    1:    8    7:    9
           4       1:   16    1:    8   10:   12
           5       1:   16    9:   15    1:    3
           6       1:   16    9:   15    4:    6
           7       1:   16    9:   15    7:    9
           8       1:   16    9:   15   10:   12

InitMesh: MESH =    32 x    30 x    24 =       23040
InitMesh: (bp) =    16 x    15 x    12 =        2880
InitMesh: Mesh cutoff (required, used) =    50.000    50.384 Ry
ExtMesh (bp) on 0 =    40 x    36 x    27 =       38880
New grid distribution:   2
           1       5:   16    5:   15    1:    4
           2       5:   16    1:    4    1:    4
           3       5:   16    1:    4    5:   12
           4       1:    4    1:    4    5:   12
           5       1:    4    5:   15    1:    4
           6       1:    4    1:    4    1:    4
           7       5:   16    5:   15    5:   12
           8       1:    4    5:   15    5:   12
New grid distribution:   3
           1       1:    7    6:   15    1:    5
           2       8:   16    1:    5    1:    5
           3       1:    7    6:   15    6:   12
           4       8:   16    1:    5    6:   12
           5       8:   16    6:   15    1:    4
           6       1:    7    1:    5    6:   12
           7       8:   16    6:   15    5:   12
           8       1:    7    1:    5    1:    5
Setting up quadratic distribution...
ExtMesh (bp) on 0 =    36 x    39 x    28 =       39312
PhiOnMesh: Number of (b)points on node 0 =                  528
PhiOnMesh: nlist on node 0 =                 2325
siesta-lua: calling siesta_comm() @ 2
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
  lua: siesta_send, Node = 1

        iscf     Eharris(eV)        E_KS(eV)     FreeEng(eV)     dDmax    Ef(eV) dHmax(eV)
   scf:    1     -465.692848     -465.837380     -465.837380  0.034442 -2.287926  0.407737
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
...At start of SCF...
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    2     -465.813242     -465.831821     -465.831821  0.015817 -2.024165  0.639844
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    3     -465.843187     -465.840116     -465.840116  0.009467 -2.185469  0.014116
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
...At start of SCF...
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    4     -465.840129     -465.840123     -465.840123  0.000283 -2.182379  0.009431
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    5     -465.840131     -465.840127     -465.840127  0.000482 -2.177195  0.001258
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
...At start of SCF...
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
...At start of SCF...
...At start of SCF...
   scf:    6     -465.840127     -465.840127     -465.840127  0.000017 -2.177082  0.000745

SCF Convergence by DM+H criterion
max |DM_out - DM_in|         :     0.0000173207
max |H_out - H_in|      (eV) :     0.0007448395
SCF cycle converged after 6 iterations
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight

Using DM_out to compute the final energy and forces
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23

siesta: E_KS(eV) =             -465.8401
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
siesta-lua: calling siesta_comm() @ 4
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At atomic movement...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d2  , var = geom.fa

siesta: Atomic forces (eV/Ang):
----------------------------------------
   Tot   -0.000000    0.228026   -0.000000
----------------------------------------
   Max    0.624643
   Res    0.311458    sqrt( Sum f_i^2 / 3N )
----------------------------------------
   Max    0.148143    constrained

Stress tensor Voigt[x,y,z,yz,xz,xy] (kbar):      -19.25       -2.90       22.46        0.00       -0.00       -0.00
(Free)E + p*V (eV/cell)     -465.8555
Target enthalpy (eV/cell)     -465.8401

cgvc: Finished line minimization    2.  Mean atomic displacement =    0.0119

                     ====================================
                        Begin CG opt. move =      5
                     ====================================

outcell: Unit cell vectors (Ang):
        7.286412    0.000000    0.000000
        0.000000    5.746952    0.000000
        0.000000    0.000000    5.621012

outcell: Cell vector modules (Ang)   :    7.286412    5.746952    5.621012
outcell: Cell angles (23,13,12) (deg):     90.0000     90.0000     90.0000
outcell: Cell volume (Ang**3)        :    235.3780
<dSpData1D:S at geom step 5
  <sparsity:sparsity for geom step 5
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 7>
  <dData1D:(new from dSpData1D) n=69, refcount: 1>
refcount: 1>
new_DM -- step:     6
Re-using DM from previous geometries...
Number of DMs in history: 1
 DM extrapolation coefficients: 
1   1.00000
New DM after history re-use:
<dSpData2D:SpM extrapolated using coords
  <sparsity:sparsity for geom step 5
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 9>
  <dData2D:(temp array for extrapolation) n=69 m=1, refcount: 1>
refcount: 1>
Note: For starting DM, Qtot, Tr[D*S] =          8.00000000          7.98750746
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23
New grid distribution:   1
           1       1:   16    1:    8    1:    3
           2       1:   16    1:    8    4:    6
           3       1:   16    1:    8    7:    9
           4       1:   16    1:    8   10:   12
           5       1:   16    9:   15    1:    3
           6       1:   16    9:   15    4:    6
           7       1:   16    9:   15    7:    9
           8       1:   16    9:   15   10:   12

InitMesh: MESH =    32 x    30 x    24 =       23040
InitMesh: (bp) =    16 x    15 x    12 =        2880
InitMesh: Mesh cutoff (required, used) =    50.000    50.384 Ry
ExtMesh (bp) on 0 =    40 x    36 x    27 =       38880
New grid distribution:   2
           1       5:   16    5:   15    1:    4
           2       5:   16    1:    4    1:    4
           3       5:   16    1:    4    5:   12
           4       1:    4    1:    4    5:   12
           5       1:    4    5:   15    1:    4
           6       1:    4    1:    4    1:    4
           7       5:   16    5:   15    5:   12
           8       1:    4    5:   15    5:   12
New grid distribution:   3
           1       1:    7    6:   15    1:    5
           2       8:   16    1:    5    1:    5
           3       1:    7    6:   15    6:   12
           4       8:   16    1:    5    6:   12
           5       8:   16    6:   15    1:    4
           6       1:    7    1:    5    6:   12
           7       8:   16    6:   15    5:   12
           8       1:    7    1:    5    1:    5
Setting up quadratic distribution...
ExtMesh (bp) on 0 =    36 x    39 x    28 =       39312
PhiOnMesh: Number of (b)points on node 0 =                  528
PhiOnMesh: nlist on node 0 =                 2325
siesta-lua: calling siesta_comm() @ 2
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
  lua: siesta_send, Node = 1

        iscf     Eharris(eV)        E_KS(eV)     FreeEng(eV)     dDmax    Ef(eV) dHmax(eV)
   scf:    1     -465.898590     -465.835745     -465.835745  0.015176 -2.194227  0.172358
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    2     -465.831373     -465.834692     -465.834692  0.006988 -2.306526  0.270549
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    3     -465.836781     -465.836230     -465.836230  0.004209 -2.237873  0.006206
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
...At start of SCF...
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    4     -465.836233     -465.836232     -465.836232  0.000130 -2.239177  0.004166
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    5     -465.836233     -465.836233     -465.836233  0.000232 -2.241511  0.000682
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    6     -465.836233     -465.836233     -465.836233  0.000008 -2.241561  0.000353

SCF Convergence by DM+H criterion
max |DM_out - DM_in|         :     0.0000080261
max |H_out - H_in|      (eV) :     0.0003531780
SCF cycle converged after 6 iterations
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight

Using DM_out to compute the final energy and forces
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23

siesta: E_KS(eV) =             -465.8362
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
siesta-lua: calling siesta_comm() @ 4
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At atomic movement...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d2  , var = geom.fa

siesta: Atomic forces (eV/Ang):
----------------------------------------
   Tot   -0.000000    0.775165   -0.000000
----------------------------------------
   Max    0.857422
   Res    0.345594    sqrt( Sum f_i^2 / 3N )
----------------------------------------
   Max    0.857422    constrained

Stress tensor Voigt[x,y,z,yz,xz,xy] (kbar):      -16.97       -0.78       22.61       -0.00       -0.00       -0.00
(Free)E + p*V (eV/cell)     -466.0742
Target enthalpy (eV/cell)     -465.8362

                     ====================================
                        Begin CG opt. move =      6
                     ====================================

outcell: Unit cell vectors (Ang):
        7.286412    0.000000    0.000000
        0.000000    5.746952    0.000000
        0.000000    0.000000    5.621012

outcell: Cell vector modules (Ang)   :    7.286412    5.746952    5.621012
outcell: Cell angles (23,13,12) (deg):     90.0000     90.0000     90.0000
outcell: Cell volume (Ang**3)        :    235.3780
<dSpData1D:S at geom step 6
  <sparsity:sparsity for geom step 6
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 7>
  <dData1D:(new from dSpData1D) n=69, refcount: 1>
refcount: 1>
new_DM -- step:     7
Re-using DM from previous geometries...
Number of DMs in history: 1
 DM extrapolation coefficients: 
1   1.00000
New DM after history re-use:
<dSpData2D:SpM extrapolated using coords
  <sparsity:sparsity for geom step 6
    nrows_g=23 nrows=3 sparsity=.1304 nnzs=69, refcount: 9>
  <dData2D:(temp array for extrapolation) n=69 m=1, refcount: 1>
refcount: 1>
Note: For starting DM, Qtot, Tr[D*S] =          8.00000000          8.01049784
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23
New grid distribution:   1
           1       1:   16    1:    8    1:    3
           2       1:   16    1:    8    4:    6
           3       1:   16    1:    8    7:    9
           4       1:   16    1:    8   10:   12
           5       1:   16    9:   15    1:    3
           6       1:   16    9:   15    4:    6
           7       1:   16    9:   15    7:    9
           8       1:   16    9:   15   10:   12

InitMesh: MESH =    32 x    30 x    24 =       23040
InitMesh: (bp) =    16 x    15 x    12 =        2880
InitMesh: Mesh cutoff (required, used) =    50.000    50.384 Ry
ExtMesh (bp) on 0 =    40 x    36 x    27 =       38880
New grid distribution:   2
           1       5:   16    5:   15    1:    4
           2       5:   16    1:    4    1:    4
           3       5:   16    1:    4    5:   12
           4       1:    4    1:    4    5:   12
           5       1:    4    5:   15    1:    4
           6       1:    4    1:    4    1:    4
           7       5:   16    5:   15    5:   12
           8       1:    4    5:   15    5:   12
New grid distribution:   3
           1       1:    7    6:   15    1:    5
           2       8:   16    1:    5    1:    5
           3       1:    7    6:   15    6:   12
           4       8:   16    1:    5    6:   12
           5       8:   16    6:   15    1:    4
           6       1:    7    1:    5    6:   12
           7       8:   16    6:   15    5:   12
           8       1:    7    1:    5    1:    5
Setting up quadratic distribution...
ExtMesh (bp) on 0 =    36 x    39 x    28 =       39312
PhiOnMesh: Number of (b)points on node 0 =                  528
PhiOnMesh: nlist on node 0 =                 2325
siesta-lua: calling siesta_comm() @ 2
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
...Right before entering the SCF loop...
  lua: siesta_send, Node = 1

        iscf     Eharris(eV)        E_KS(eV)     FreeEng(eV)     dDmax    Ef(eV) dHmax(eV)
   scf:    1     -465.786245     -465.839881     -465.839881  0.012909 -2.226629  0.147687
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    2     -465.836759     -465.839164     -465.839164  0.005844 -2.130337  0.230635
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
...At start of SCF...
   scf:    3     -465.840637     -465.840238     -465.840238  0.003498 -2.189053  0.005204
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    4     -465.840240     -465.840239     -465.840239  0.000108 -2.187905  0.003476
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    5     -465.840240     -465.840239     -465.840239  0.000187 -2.185936  0.000522
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
   scf:    6     -465.840239     -465.840239     -465.840239  0.000007 -2.185898  0.000298

SCF Convergence by DM+H criterion
max |DM_out - DM_in|         :     0.0000065499
max |H_out - H_in|      (eV) :     0.0002976601
SCF cycle converged after 6 iterations
siesta-lua: calling siesta_comm() @ 3
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
...At start of SCF...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight

Using DM_out to compute the final energy and forces
No. of atoms with KB's overlaping orbs in proc 0. Max # of overlaps:       3      23

siesta: E_KS(eV) =             -465.8402
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At analysis...
...At atomic movement...
...At atomic movement...
...At atomic movement...
...At analysis...
...At analysis...
...At analysis...
...At analysis...
...At analysis...
...At analysis...
siesta-lua: calling siesta_comm() @ 4
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At atomic movement...
  lua: siesta_send, Node = 1
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d0  , var = SCF.Mixer.Weight
    lua2siesta; dtype = d2  , var = geom.fa

siesta: Atomic forces (eV/Ang):
----------------------------------------
   Tot    0.000001    0.315021   -0.000000
----------------------------------------
   Max    0.592187
   Res    0.288449    sqrt( Sum f_i^2 / 3N )
----------------------------------------
   Max    0.007107    constrained

Stress tensor Voigt[x,y,z,yz,xz,xy] (kbar):      -18.90       -2.60       22.48        0.00        0.00        0.00
(Free)E + p*V (eV/cell)     -465.8883
Target enthalpy (eV/cell)     -465.8402
siesta-lua: calling siesta_comm() @ 6
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
...At analysis...
-- siesta table structure available in LUA
siesta = {
  Node = 1,
  SCF.EDM.Tolerance,
  Use.DM,
  SCF.Mixer.Weight,
  SCF.MonitorForces,
  SCF.EDM.Converge,
  Write.EndOfCycle.DM,
  DM.HistoryDepth,
  Write.Voronoi,
  Mesh.Cutoff.Minimum,
  MD.FC.Displ,
  Write.DenChar,
  SCF.H.Tolerance,
  Mesh.Write.NeutralAtomPotential,
  Mesh.Write.IonicRho,
  MD.MaxStressTol,
  SCF.NumberPulay,
  MD.FC.First,
  SCF.NumberBroyden,
  SCF.H.Converge,
  MD.DM.History.Depth,
  MD.Temperature.Target,
  MD.FinalTimeStep,
  Mesh.Write.TotalRho,
  Write.H,
  Write.HirshfeldPop,
  SCF.Mixer.Restart,
  SCF.MixHamiltonian,
  SCF.Harris.Tolerance,
  Label,
  SCF.Harris.Converge,
  SCF.FreeE.Converge,
  SCF.MaxIterations,
  SCF.DM.Converge,
  Mesh.Write.TotalPotential,
  Write.Forces,
  MD.Relax.Cell,
  Write.VoronoiPop,
  MD.Relax.CellOnly,
  MD.Steps.Last,
  SCF.MixingWeight,
  Mesh.Write.HartreePotential,
  MD.MaxForceTol,
  SCF.MixCharge,
  Mesh.Write.Rho,
  ElectronicTemperature,
  MD.FC.Last,
  Write.EndOfCycle.H,
  SCF.DM.Tolerance,
  Mesh.Write.BaderRho,
  SCF.NumberKick,
  MD.MaxDispl,
  Mesh.Write.RhoXC,
  SCF.FreeE.Tolerance,
  MD.Steps.First,
  Write.Hirshfeld,
  Write.HS,
  Write.DM,
  Write.MullikenPop,
  SCF.MinIterations,
  SCF.Mixer.Iterations,
  Mesh.Write.DeltaRho,
  SCF.KickMixingWeight,
  SCF.charge,
  sparse.EDM,
  SCF.Mixer.Weight,
  SCF.iteration,
  geom.na_u,
  geom.xa_last,
  geom.nsc,
  sparse.S,
  Mesh.Cutoff.Minimum,
  SCF.drhoG,
  sparse.DM,
  E.harris,
  sparse.H,
  E.neutral_atom,
  BZ.k.Displacement,
  sparse.H_kin,
  SCF.Mixer.Switch,
  geom.neutral_charge,
  SCF.converged,
  geom.mass,
  geom.stress,
  E.ions,
  geom.species,
  E.negf.dN,
  SCF.Mixer.Restart,
  E.negf.total,
  E.free,
  geom.fa,
  E.exchange_correlation,
  E.negf.kinetic,
  geom.fa_pristine,
  Mesh.Cutoff.Used,
  geom.stress_constrained,
  BZ.k.Matrix,
  E.dftu,
  sparse.H_Vkb,
  geom.z,
  E.negf.band_structure,
  geom.va,
  geom.cell_last,
  E.band_structure,
  geom.orbital_charge,
  geom.stress_pristine,
  E.ions_kinetic,
  geom.last_orbital,
  charge.protons,
  SCF.dE,
  SCF.dD,
  E.kinetic,
  geom.vcell,
  E.fermi,
  geom.xa,
  E.negf.harris,
  sparse.n_col,
  geom.fa_constrained,
  SCF.dH,
  sparse.xij,
  SCF.Mixer.Iterations,
  charge.electrons,
  E.electrostatic,
  geom.cell,
  sparse.list_col,
  sparse.list_ptr,
  E.total,
  E.spin_orbit,
  sparse.nnzs,
}
  lua: siesta_send, Node = 1

outcoor: Relaxed atomic coordinates (Ang):                  
   -0.00000000   -0.00483080   -0.00000000   1       1  O
    0.75700000    0.58600000    0.00000000   2       2  H
   -0.75700000    0.58600000    0.00000000   2       3  H

siesta: Program's energy decomposition (eV):
siesta: Ebs     =      -104.605440
siesta: Eions   =       815.854478
siesta: Ena     =       175.129057
siesta: Ekin    =       350.459573
siesta: Enl     =       -61.795435
siesta: Eso     =         0.000000
siesta: Edftu   =         0.000000
siesta: DEna    =        -1.659000
siesta: DUscf   =         0.725950
siesta: DUext   =         0.000000
siesta: Exc     =      -112.845906
siesta: eta*DQ  =         0.000000
siesta: Emadel  =         0.000000
siesta: Emeta   =         0.000000
siesta: Emolmec =         0.000000
siesta: Ekinion =         0.000000
siesta: Eharris =      -465.840239
siesta: Etot    =      -465.840239
siesta: FreeEng =      -465.840239

siesta: Final energy (eV):
siesta:  Band Struct. =    -104.605440
siesta:       Kinetic =     350.459573
siesta:       Hartree =     382.191615
siesta:       Edftu   =       0.000000
siesta:       Eso     =       0.000000
siesta:    Ext. field =       0.000000
siesta:   Exch.-corr. =    -112.845906
siesta:  Ion-electron =   -1071.594827
siesta:       Ion-ion =     -14.050694
siesta:       Ekinion =       0.000000
siesta:         Total =    -465.840239
siesta:         Fermi =      -2.185898

siesta: Atomic forces (eV/Ang):
siesta:      1    0.000001    0.007107   -0.000000
siesta:      2    0.592186    0.153957   -0.000000
siesta:      3   -0.592187    0.153957   -0.000000
siesta: ----------------------------------------
siesta:    Tot    0.000001    0.315021   -0.000000

siesta: Stress tensor (static) (eV/Ang**3):
siesta:    -0.011797    0.000000    0.000000
siesta:     0.000000   -0.001623   -0.000000
siesta:     0.000000    0.000000    0.014032

siesta: Cell volume =        235.378012 Ang**3

siesta: Pressure (static):
siesta:                Solid            Molecule  Units
siesta:          -0.00000222         -0.00001694  Ry/Bohr**3
siesta:          -0.00020399         -0.00155559  eV/Ang**3
siesta:          -0.32683574         -2.49236490  kBar
(Free)E+ p_basis*V_orbitals  =        -465.255072
(Free)Eharris+ p_basis*V_orbitals  =        -465.255072

siesta: Electric dipole (a.u.)  =    0.000000    0.561699    0.000000
siesta: Electric dipole (Debye) =    0.000000    1.427698    0.000000

dhscf: Vacuum level (max, mean) =    0.639711   -0.067693 eV

cite: Please see "lua_h2o.bib" for an exhaustive BiBTeX file.
cite: Please clearly indicate Siesta version in published work: v4.1-b4-351
cite: This calculation has made use of the following articles
cite: which are encouraged to be cited in a published work.
        Primary SIESTA paper
          DOI: www.doi.org/10.1088/0953-8984/14/11/302

siesta-lua: calling siesta_comm() @ 7
  lua: siesta_receive, Node = 1
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d0  , var = SCF.Mixer.Weight
    siesta2lua; dtype = d2  , var = geom.fa
    siesta2lua; dtype = d2  , var = geom.xa
  lua: siesta_send, Node = 1
>> End of run:  22-JAN-2021  21:44:56
Job completed
